{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","bind","float","color","to","cursur","marginRight","Contacts","Fragment","key","Header","branding","href","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","showAddContactInfo","onSubmit","e","preventDefault","newContact","post","history","push","target","EditContact","uptContact","match","params","put","About","NotFound","Test","title","body","fetch","then","response","json","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.12062b90.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport axios from \"axios\"\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case \"DELETE_CONTACT\": \r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact =>\r\n                    contact.id !== action.payload)\r\n            }\r\n        case \"ADD_CONTACT\": \r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            }\r\n        case \"UPDATE_CONTACT\":\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact =>\r\n                    contact.id === action.payload.id ? (contact = action.payload) : contact\r\n                )\r\n            }\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => {\r\n            this.setState(state => reducer(state, action))\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n       const res = await axios.get('https://jsonplaceholder.typicode.com/users')\r\n       this.setState({contacts: res.data})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context;","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport PropTypes from 'prop-types'\r\nimport {Consumer} from \"../../context\"\r\nimport axios from \"axios\"\r\n\r\nexport default class Contact extends Component {\r\n    state={\r\n        showContactInfo: false\r\n    };\r\n    onDeleteClick = async (id, dispatch) => {\r\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n        dispatch({type: \"DELETE_CONTACT\", payload: id})\r\n    }\r\n\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact\r\n        const { showContactInfo } = this.state\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return(\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>{name}{\"  \"} \r\n                                <i onClick={() => {\r\n                                    this.setState({showContactInfo: !this.state.showContactInfo})\r\n                                    }} \r\n                                    className=\"fas fa-sort-down\" style={{cursor: \"pointer\"}}/>\r\n                                <i onClick={this.onDeleteClick.bind(this, id, dispatch)} className=\"fa fa-times\" style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}/>\r\n                                    <Link to ={`contact/edit/${id}`}>\r\n                                        <i className=\"fas fa-pencil-alt\" style={{cursur: \"pointer\", float: \"right\", color: \"black\", marginRight: \"1rem\"}}></i>\r\n                                    </Link>\r\n                            </h4>\r\n                                {showContactInfo ? (<ul className=\"list-group\">\r\n                                <li className=\"list-group-item\">Email: {email}</li>\r\n                                <li className=\"list-group-item\">Phone: {phone}</li>\r\n                            </ul>) : null}\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n}\r\n//  Contact;","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\nimport {Consumer} from \"../../context\";\r\n\r\nexport default class Contacts extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    return(\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span> List</h1>\r\n                            {value.contacts.map(contact => (\r\n                                <Contact key={contact.id} contact={contact} />\r\n                            ))}\r\n                        </React.Fragment> \r\n\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n// export default Contacts","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n    const { branding } = props\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">\r\n                    {branding}\r\n                </a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"/> Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"/> Add</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"/> About</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: \"my App\"\r\n}; \r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\"\r\n\r\nconst TextInputGroup = ({label, name, value, placeholder, type, onChange, error}) => {\r\n    return(\r\n        <div>\r\n            <label htmlFor={name}>{label}</label>\r\n            <input type={type} className={classnames(\"form-control form-control-lg\", {\"is-invalid\": error})} placeholder={placeholder} name={name} value={value} onChange={onChange}/>\r\n            {error && \r\n            <div className=\"invalid-feedback\">{error}</div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string.isRequired\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: \"text\"\r\n}\r\n\r\nexport default TextInputGroup;","import React, {Component} from \"react\"\r\nimport {Consumer} from \"../../context\"\r\nimport TextInputGroup from \"../layout/TextInputGroup\"\r\nimport axios from \"axios\"\r\n\r\nclass AddContact extends Component {\r\n\r\n    state ={\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        errors: {},\r\n        showAddContactInfo: true\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const {name, email, phone} = this.state;\r\n\r\n        if(name === \"\"){\r\n            this.setState({errors: {name: \"Name is required!\"}})\r\n            return;\r\n        }\r\n        if(email === \"\"){\r\n            this.setState({errors: {email: \"Email is required!\"}})\r\n            return;\r\n        }\r\n        if(phone === \"\"){\r\n            this.setState({errors: {phone: \"Phone number is required!\"}})\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n        const res = await axios.post(`https://jsonplaceholder.typicode.com/users`, newContact)\r\n        dispatch({type: \"ADD_CONTACT\", payload: res.data})\r\n\r\n        this.setState({\r\n            name: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            errors: {},\r\n            showAddContactInfo: false\r\n        })\r\n        this.props.history.push(\"/\")\r\n    }\r\n\r\n    onChange = e => this.setState({[e.target.name]: e.target.value})\r\n\r\n    render(){\r\n        const {name, email, phone, showAddContactInfo, errors} = this.state;\r\n        \r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return(\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Add contact  <h4 style={{float: \"right\"}}><i onClick={() => {\r\n                                    this.setState({showAddContactInfo: !this.state.showAddContactInfo})\r\n                                    }} \r\n                                    className=\"fas fa-sort-down\" style={{cursor: \"pointer\"}}/></h4></div>\r\n                                    {showAddContactInfo ? (\r\n                                        <div className=\"card-body\">\r\n                                            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                                <TextInputGroup label=\"Name\" name=\"name\" placeholder=\"Enter Name\" value={name} onChange={this.onChange} error={errors.name}/>\r\n                                                <TextInputGroup type=\"email\" label=\"Email\" name=\"email\" placeholder=\"Enter Email\" value={email} onChange={this.onChange} error={errors.email}/>\r\n                                                <TextInputGroup type=\"phone\" label=\"Phone\" name=\"phone\" placeholder=\"Enter Phone Number\" value={phone} onChange={this.onChange} error={errors.phone}/>\r\n                                                <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-block btn-light mt-3\"/>\r\n                                            </form>\r\n                                        </div>\r\n                                    ) : null}\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddContact","import React, {Component} from \"react\"\r\nimport {Consumer} from \"../../context\"\r\nimport TextInputGroup from \"../layout/TextInputGroup\"\r\nimport axios from \"axios\"\r\n\r\nclass EditContact extends Component {\r\n\r\n    state ={\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        errors: {}\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const { id } = this.props.match.params\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = res.data;\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        })\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const {name, email, phone} = this.state;\r\n\r\n        if(name === \"\"){\r\n            this.setState({errors: {name: \"Name is required!\"}})\r\n            return;\r\n        }\r\n        if(email === \"\"){\r\n            this.setState({errors: {email: \"Email is required!\"}})\r\n            return;\r\n        }\r\n        if(phone === \"\"){\r\n            this.setState({errors: {phone: \"Phone number is required!\"}})\r\n            return;\r\n        }\r\n\r\n        const uptContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n        const {id}= this.props.match.params\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, uptContact)\r\n        dispatch({type:\"UPDATE_CONTACT\", payload: res.data})\r\n\r\n        this.setState({\r\n            name: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            errors: {}\r\n        })\r\n        this.props.history.push(\"/\")\r\n    }\r\n\r\n    onChange = e => this.setState({[e.target.name]: e.target.value})\r\n\r\n    render(){\r\n        const {name, email, phone, errors} = this.state;\r\n        \r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return(\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Edit contact</div>\r\n                                        <div className=\"card-body\">\r\n                                            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                                <TextInputGroup label=\"Name\" name=\"name\" placeholder=\"Enter Name\" value={name} onChange={this.onChange} error={errors.name}/>\r\n                                                <TextInputGroup type=\"email\" label=\"Email\" name=\"email\" placeholder=\"Enter Email\" value={email} onChange={this.onChange} error={errors.email}/>\r\n                                                <TextInputGroup type=\"phone\" label=\"Phone\" name=\"phone\" placeholder=\"Enter Phone Number\" value={phone} onChange={this.onChange} error={errors.phone}/>\r\n                                                <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-block btn-light mt-3\"/>\r\n                                            </form>\r\n                                        </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditContact","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page does not exist</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n    state= {\r\n        title: \"\",\r\n        body: \"\"\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n        .then(response => response.json())\r\n        .then(data => this.setState({\r\n            title: data.title,\r\n            body: data.body\r\n        }))\r\n    }\r\n    // componentWillMount(){\r\n    //     console.log(\"component will mount...\")\r\n    // }\r\n    // componentDidUpdate(){\r\n    //     console.log(\"Component did update...\")\r\n    // }\r\n    // componentWillReceiveProps(nextProps, nextState){\r\n    //     console.log(\"component Will Receive Props\")\r\n    // }\r\n    render() {\r\n        const {title, body } = this.state\r\n        return (\r\n            <div>\r\n              <h1>{title}</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test;\r\n","import React from 'react';\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport About from \"./components/pages/About\"\nimport NotFound from \"./components/pages/NotFound\"\nimport {Provider} from \"./context\";\nimport  \"bootstrap/dist/css/bootstrap.min.css\"\nimport './App.css';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\"\nimport Test from \"./components/test/Test\"\n\nfunction App() {  \n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts}/>\n                <Route exact path=\"/contact/add\" component={AddContact}/>\n                <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n                <Route exact path=\"/about\" component={About}/>\n                <Route exact path=\"/test\" component={Test}/>\n                <Route component={NotFound}/>\n              </Switch>\n            </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}